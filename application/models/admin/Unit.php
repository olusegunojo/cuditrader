<?php
defined('BASEPATH') OR exit('');

/**
 * Description of Unit
 *
 * @author S. Olusegun Ojo <solusegunojo@gmail.com>
 * @date 5th September, 2018
 */
class Unit extends CI_Model{
    public function __construct(){
        parent::__construct();
    }
    
    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
    /**
     * 
     * 
     */
    public function addLUnit($name, $logo){
        $data = ['name'=>$name, 'logo'=>$logo];
        
        //set the datetime based on the db driver in use
        // $this->db->platform() == "sqlite3" 
        //         ? 
        // $this->db->set('created_on', "datetime('now')", FALSE) 
        //         : 
        // $this->db->set('created_on', "NOW()", FALSE);
        
        $this->db->insert('loan_units', $data);
        
        if($this->db->affected_rows() > 0){
            return $this->db->insert_id();
        }
        
        else{
            return FALSE;
        }
    }
    
    
    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
    /**
     * Get details about a loan unit
     * @param type $id
     * @return boolean
     */
    public function get_lunit_info($id){
        // $this->db->select('id, name, description');
        $this->db->where('id', $id);

        $run_q = $this->db->get('loan_units');

        if($run_q->num_rows() > 0){
            return $run_q->result();
        }

        else{
            return FALSE;
        }
    }




   /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
    /**
     * 
     * @param type $orderBy
     * @param type $orderFormat
     * @param type $start
     * @param type $limit
     * @return boolean
     */
    public function getAllLUnits($orderBy = "name", $orderFormat = "ASC", $start = 0, $limit = ""){
        // $this->db->select('id, first_name, last_name, email, phone, address, created_on, last_login, active, deleted');
        $this->db->limit($limit, $start);
        $this->db->order_by($orderBy, $orderFormat);
        
        $run_q = $this->db->get('loan_units');
        
        if($run_q->num_rows() > 0){
            return $run_q->result();
        }
        
        else{
            return FALSE;
        }
    }
    
    
    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
  
   /**
    * 
    * @param type $user_id
    * @param type $new_value
    * @return boolean
    */
    public function deleteLUnit($id){       
        $this->db->where('id', $id);
        // $this->db->update('loan_units', ['deleted'=>$new_value]);
        $this->db->delete('loan_units');
       
        if($this->db->affected_rows()){
            return TRUE;
        }

        else{
            return FALSE;
        }
   }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
   
   
    /**
     * 
     * @param type $value
     * @return boolean
     */
    public function lUnitSearch($value){
        $q = "SELECT * FROM loan_units WHERE 
                -- id != {$_SESSION['user_id']}
                --     AND
                (
                MATCH(name) AGAINST(?)
                || name LIKE '%".$this->db->escape_like_str($value)."%'
                )";

        $run_q = $this->db->query($q, [$value, $value]);

        if($run_q->num_rows() > 0){
            return $run_q->result();
        }

        else{
            return FALSE;
        }
    }
    
    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
    public function updateLUnit($id, $name, $logo){
        $data = ['name'=>$name, 'logo'=>$logo];
        
        $this->db->where('id', $id);
        
        return $this->db->update('loan_units', $data);
        
    }
    
    
    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
/*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
    /**
     * 
     * @param type $f_name
     * @param type $l_name
     * @param type $email
     * @param type $password
     * @param type $mobile
     * @param type $addr
     * @return boolean
     */
    public function addCUnit($name, $logo){
        $data = ['name'=>$name, 'logo'=>$logo];
        
        //set the datetime based on the db driver in use
        // $this->db->platform() == "sqlite3" 
        //         ? 
        // $this->db->set('created_on', "datetime('now')", FALSE) 
        //         : 
        // $this->db->set('created_on', "NOW()", FALSE);
        
        $this->db->insert('collateral_units', $data);
        
        if($this->db->affected_rows() > 0){
            return $this->db->insert_id();
        }
        
        else{
            return FALSE;
        }
    }
    
    
    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
    /**
     * Get details about a collateral unit
     * @param type $id
     * @return boolean
     */
    public function get_cunit_info($id){
        $this->db->where('id', $id);

        $run_q = $this->db->get('collateral_units');

        if($run_q->num_rows() > 0){
            return $run_q->result();
        }

        else{
            return FALSE;
        }
    }




   /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
    /**
     * 
     * @param type $orderBy
     * @param type $orderFormat
     * @param type $start
     * @param type $limit
     * @return boolean
     */
    public function getAllCUnits($orderBy = "name", $orderFormat = "ASC", $start = 0, $limit = ""){
        $this->db->limit($limit, $start);
        $this->db->order_by($orderBy, $orderFormat);
        
        $run_q = $this->db->get('collateral_units');
        
        if($run_q->num_rows() > 0){
            return $run_q->result();
        }
        
        else{
            return FALSE;
        }
    }
    
    
    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
  
   /**
    * 
    * @param type $user_id
    * @param type $new_value
    * @return boolean
    */
    public function deleteCUnit($id){       
        $this->db->where('id', $id);
        $this->db->delete('collateral_units');
       
        if($this->db->affected_rows()){
            return TRUE;
        }

        else{
            return FALSE;
        }
   }


    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
   
   
    /**
     * 
     * @param type $value
     * @return boolean
     */
    public function cUnitSearch($value){
        $q = "SELECT * FROM collateral_units WHERE 
                -- id != {$_SESSION['user_id']}
                --     AND
                (
                MATCH(name) AGAINST(?)
                || name LIKE '%".$this->db->escape_like_str($value)."%'
                )";

        $run_q = $this->db->query($q, [$value, $value]);

        if($run_q->num_rows() > 0){
            return $run_q->result();
        }

        else{
            return FALSE;
        }
    }
    
    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
    public function updateCUnit($id, $name, $logo){
        $data = ['name'=>$name, 'logo'=>$logo];
        
        $this->db->where('id', $id);
        
        return $this->db->update('collateral_units', $data);
    }
    
   
}
